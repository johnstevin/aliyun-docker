version: '2'

services:
  mysql:
    image: mysql:5.7
    container_name: mysql
    ports:
      - "3306:3306"
    hostname: docker-mysql
    volumes:
      - ./mysql/data:/var/lib/mysql
      - ./mysql/etc/conf.d:/etc/mysql/conf.d
    env_file: .env
    environment:
        TZ: Asia/Chongqing
    restart: always
    networks:
        default:
            ipv4_address: 172.19.0.2

  nginx:
    image: nginx:1.9.8
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    hostname: docker-nginx
    volumes:
      - ./nginx/etc/sites:/etc/nginx/sites
      - ./nginx/etc/conf.d:/etc/nginx/conf.d
      - ./nginx/etc/includes:/etc/nginx/includes
      - ./nginx/logs:/var/log/nginx
      - ./www:/var/www
    links:
      - web
      # - phpmyadmin
      # - php-good-practice 
      # - ghost 
      # - beanstalkd-console
      # - gollum
    environment:
        TZ: Asia/Chongqing
    restart: always
    networks:
        default:
            ipv4_address: 172.19.0.3

  web:
    #image: php:5.6-fpm
    build: ./web
    container_name: web
    links:
      - redis
      - mysql
      # - golang
      - mongodb
      # - beanstalkd
    ports:
      - "9009:9001" #supervisord
      - "9050:9050"
      - "9003:9003" #xdebug
    hostname: docker-web
    volumes: 
      # - ./web/cron:/etc/pam.d/cron
      # - ./web/crontab:/etc/crontab
      - ./web/log:/var/log
      - ./web/supervisor:/etc/supervisor/conf.d
      - ./www:/var/www
      - ./web/composer:/root/.composer
      - ./ssh-outside:/root/.ssh
    extra_hosts:
      - "svr.med3.docker:172.19.0.3"
      - "svr.qa.medlinker.com:114.55.3.97"
      - "push.med.qa:114.55.3.97"
      - "docker_host:10.0.4.126"
    environment:
        TZ: Asia/Chongqing
    restart: always
    networks:
        default:
            ipv4_address: 172.19.0.4

  redis:
    image: redis
    container_name: redis
    volumes:
        - ./redis/data:/data
    ports:
        - "6379:6379"
    hostname: docker-redis
    environment:
        TZ: Asia/Chongqing
    restart: always
    networks:
      default:
        ipv4_address: 172.19.0.5

  golang:
    build: ./golang
    container_name: golang
    ports:
      - "2379:2379" #etcd
      # - "8123:8123"
      # - "8124:8124"
      # - "8125:8125"
      # - "8130:8130"
      # - "8131:8131"
      - "8080:8080" #beego-project
    volumes:
      - ./www/go:/go
      - ./golang/log:/var/log
      - ./golang/supervisor:/etc/supervisor/conf.d
      - ./ssh-outside:/root/.ssh
    hostname: docker-golang
    #env_file: .env
    environment:
        TZ: Asia/Chongqing
        #GOPATH: /var/www/go
    restart: always
    networks:
      default:
        ipv4_address: 172.19.0.6

  mongodb:
    image: mongo
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - ./mongodb/data:/data
    hostname: docker-mongodb
    environment:
      TZ: Asia/Chongqing
    restart: always
    networks:
      default:
        ipv4_address: 172.19.0.7

  # ghost:
  #   image: ghost:0.11.10
  #   container_name: ghost
  #   volumes:
  #     - ./ghost:/var/lib/ghost
  #   ports:
  #     - "2369:2368"
  #   environment:
  #     - NODE_ENV=production
  #   restart: always
  #   networks:
  #     default:
  #       ipv4_address: 172.19.0.8

  # crawlers:
  #   build: ./www/crawlers
  #   container_name: crawlers
  #   volumes:
  #     - ./www/crawlers:/usr/src/app
  #   restart: always

  # phpmyadmin:
  #   image: phpmyadmin/phpmyadmin
  #   container_name: phpmyadmin
  #   env_file: .env
  #   links:
  #     - mysql:db
  #   restart: always

  # php-good-practice:
  #   image: dordoka/reveal
  #   container_name: php-good-practice
  #   volumes:
  #     - ./reveal/php-good-practice:/home/reveal/presos
  #   restart: always

  # beanstalkd:
  #   image: schickling/beanstalkd
  #   container_name: beanstalkd
  #   ports:
  #     - "11300:11300"
  #   restart: always

  # beanstalkd-console:
  #   image: schickling/beanstalkd-console
  #   container_name: beanstalkd-console
  #   links:
  #     - beanstalkd
  #   restart: always

  # shadowsocks:
  #   image: littleqz/shadowsocks-client
  #   container_name: shadowsocks
  #   ports:
  #     - "1088:1080"
  #   env_file: .env
  #   restart: always

  # gollum:
  #   build: ./gollum
  #   container_name: gollum
  #   volumes: 
  #     - ./gollum/wiki:/wiki
  #   restart: always

# networks:
#     default:
#         driver: bridge
#         driver_opts:
#             com.docker.network.enable_ipv6: "false"
#         ipam:
#             driver: default
#             config:
#             - subnet: 172.19.0.0/24
#               gateway: 172.19.0.1